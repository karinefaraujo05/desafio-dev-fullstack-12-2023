{"ast":null,"code":"var _jsxFileName = \"/home/karine/desafio-front/src/components/Listagem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport './Listagem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Listagem = ({\n  simulacoes\n}) => {\n  _s();\n  // Extrai as colunas da primeira simulação para gerar as colunas da tabela\n  const colunas = React.useMemo(() => simulacoes.length > 0 ? Object.keys(simulacoes[0]).map(chave => ({\n    Header: chave,\n    accessor: chave\n  })) : [], [simulacoes]);\n\n  // Extrai os dados das simulações\n  const dados = React.useMemo(() => simulacoes, [simulacoes]);\n\n  // Instancia a tabela com as colunas e dados\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns: colunas,\n    data: dados\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    style: {\n      borderCollapse: 'collapse',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(coluna => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...coluna.getHeaderProps(),\n          style: {\n            border: '1px solid black',\n            padding: '8px'\n          },\n          children: coluna.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(linha => {\n        prepareRow(linha);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...linha.getRowProps(),\n          children: linha.cells.map(celula => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...celula.getCellProps(),\n            style: {\n              border: '1px solid black',\n              padding: '8px'\n            },\n            children: celula.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Listagem, \"1hEpvgaQqajEGOez3vV5aE5wzAw=\", false, function () {\n  return [useTable];\n});\n_c = Listagem;\nexport default Listagem;\nvar _c;\n$RefreshReg$(_c, \"Listagem\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","Listagem","simulacoes","_s","colunas","useMemo","length","Object","keys","map","chave","Header","accessor","dados","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","columns","data","style","borderCollapse","width","children","headerGroup","getHeaderGroupProps","headers","coluna","getHeaderProps","border","padding","render","fileName","_jsxFileName","lineNumber","columnNumber","linha","getRowProps","cells","celula","getCellProps","_c","$RefreshReg$"],"sources":["/home/karine/desafio-front/src/components/Listagem.js"],"sourcesContent":["import React from 'react';\nimport { useTable } from 'react-table';\nimport './Listagem.css';\n\n\nconst Listagem = ({ simulacoes }) => {\n  // Extrai as colunas da primeira simulação para gerar as colunas da tabela\n  const colunas = React.useMemo(\n    () =>\n      simulacoes.length > 0\n        ? Object.keys(simulacoes[0]).map(chave => ({\n            Header: chave,\n            accessor: chave,\n          }))\n        : [],\n    [simulacoes]\n  );\n\n  // Extrai os dados das simulações\n  const dados = React.useMemo(() => simulacoes, [simulacoes]);\n\n  // Instancia a tabela com as colunas e dados\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({\n    columns: colunas,\n    data: dados,\n  });\n\n  return (\n    <table {...getTableProps()} style={{ borderCollapse: 'collapse', width: '100%' }}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(coluna => (\n              <th {...coluna.getHeaderProps()} style={{ border: '1px solid black', padding: '8px' }}>\n                {coluna.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map(linha => {\n          prepareRow(linha);\n          return (\n            <tr {...linha.getRowProps()}>\n              {linha.cells.map(celula => (\n                <td {...celula.getCellProps()} style={{ border: '1px solid black', padding: '8px' }}>\n                  {celula.render('Cell')}\n                </td>\n              ))}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Listagem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}