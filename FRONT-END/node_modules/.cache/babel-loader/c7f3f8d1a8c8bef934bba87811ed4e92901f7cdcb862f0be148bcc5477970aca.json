{"ast":null,"code":"var _jsxFileName = \"/home/karine/desafio-front/src/components/Listagem.js\",\n  _s = $RefreshSig$();\n// Listagem.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Listagem = () => {\n  _s();\n  const [simulacoes, setSimulacoes] = useState([]);\n  console.log(simulacoes, \"AQUI KA\");\n  useEffect(() => {\n    const fetchSimulacoes = async () => {\n      try {\n        // Fazendo a solicitação GET à API para listar as simulações\n        const response = await axios.get('http://localhost:3000/api/listar-simulacoes');\n        setSimulacoes(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar simulações:', error);\n      }\n    };\n    fetchSimulacoes();\n  }, []);\n  const renderSimulacoes = () => {\n    const simulacoesList = [];\n    for (let i = 0; i < simulacoes.length; i++) {\n      const simulacao = simulacoes[i];\n      simulacoesList.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nome: \", simulacao.nomeCompleto]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", simulacao.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Telefone: \", simulacao.telefone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, simulacao.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this));\n    }\n    return simulacoesList;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listagem de Simula\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderSimulacoes()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Listagem, \"g2/vEh6wWkYr+gGiDEVFy7DM71U=\");\n_c = Listagem;\nexport default Listagem;\nvar _c;\n$RefreshReg$(_c, \"Listagem\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Listagem","_s","simulacoes","setSimulacoes","console","log","fetchSimulacoes","response","get","data","error","renderSimulacoes","simulacoesList","i","length","simulacao","push","children","nomeCompleto","fileName","_jsxFileName","lineNumber","columnNumber","email","telefone","id","_c","$RefreshReg$"],"sources":["/home/karine/desafio-front/src/components/Listagem.js"],"sourcesContent":["// Listagem.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Listagem = () => {\n  const [simulacoes, setSimulacoes] = useState([]);\n  console.log(simulacoes,\"AQUI KA\")\n\n  useEffect(() => {\n    const fetchSimulacoes = async () => {\n      try {\n        // Fazendo a solicitação GET à API para listar as simulações\n        const response = await axios.get('http://localhost:3000/api/listar-simulacoes');\n        setSimulacoes(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar simulações:', error);\n      }\n    };\n\n    fetchSimulacoes();\n  }, []);\n\n  const renderSimulacoes = () => {\n    const simulacoesList = [];\n\n    for (let i = 0; i < simulacoes.length; i++) {\n      const simulacao = simulacoes[i];\n      simulacoesList.push(\n        <li key={simulacao.id}>\n          <p>Nome: {simulacao.nomeCompleto}</p>\n          <p>Email: {simulacao.email}</p>\n          <p>Telefone: {simulacao.telefone}</p>\n          {/* Adicione mais campos conforme necessário */}\n        </li>\n      );\n    }\n\n    return simulacoesList;\n  };\n\n  return (\n    <div>\n      <h1>Listagem de Simulações</h1>\n      <ul>{renderSimulacoes()}</ul>\n    </div>\n  );\n};\n\nexport default Listagem;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChDS,OAAO,CAACC,GAAG,CAACH,UAAU,EAAC,SAAS,CAAC;EAEjCN,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6CAA6C,CAAC;QAC/EL,aAAa,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,cAAc,GAAG,EAAE;IAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,UAAU,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C,MAAME,SAAS,GAAGb,UAAU,CAACW,CAAC,CAAC;MAC/BD,cAAc,CAACI,IAAI,eACjBjB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,GAAG,QAAM,EAACF,SAAS,CAACG,YAAY;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCvB,OAAA;UAAAkB,QAAA,GAAG,SAAO,EAACF,SAAS,CAACQ,KAAK;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BvB,OAAA;UAAAkB,QAAA,GAAG,YAAU,EAACF,SAAS,CAACS,QAAQ;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH9BP,SAAS,CAACU,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACN,CAAC;IACH;IAEA,OAAOV,cAAc;EACvB,CAAC;EAED,oBACEb,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BvB,OAAA;MAAAkB,QAAA,EAAKN,gBAAgB,CAAC;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1CID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}